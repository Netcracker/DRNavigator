//go:build !ignore_autogenerated

// Code generated by controller-gen. DO NOT EDIT.

package v3

import (
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CR) DeepCopyInto(out *CR) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	out.Status = in.Status
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CR.
func (in *CR) DeepCopy() *CR {
	if in == nil {
		return nil
	}
	out := new(CR)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *CR) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CRList) DeepCopyInto(out *CRList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]CR, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CRList.
func (in *CRList) DeepCopy() *CRList {
	if in == nil {
		return nil
	}
	out := new(CRList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *CRList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CRSpec) DeepCopyInto(out *CRSpec) {
	*out = *in
	in.SiteManager.DeepCopyInto(&out.SiteManager)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CRSpec.
func (in *CRSpec) DeepCopy() *CRSpec {
	if in == nil {
		return nil
	}
	out := new(CRSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CRSpecParameters) DeepCopyInto(out *CRSpecParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CRSpecParameters.
func (in *CRSpecParameters) DeepCopy() *CRSpecParameters {
	if in == nil {
		return nil
	}
	out := new(CRSpecParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CRSpecSiteManager) DeepCopyInto(out *CRSpecSiteManager) {
	*out = *in
	if in.Alias != nil {
		in, out := &in.Alias, &out.Alias
		*out = new(string)
		**out = **in
	}
	if in.After != nil {
		in, out := &in.After, &out.After
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Before != nil {
		in, out := &in.Before, &out.Before
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Sequence != nil {
		in, out := &in.Sequence, &out.Sequence
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.AllowedStandbyStateList != nil {
		in, out := &in.AllowedStandbyStateList, &out.AllowedStandbyStateList
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Timeout != nil {
		in, out := &in.Timeout, &out.Timeout
		*out = new(int64)
		**out = **in
	}
	out.Parameters = in.Parameters
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CRSpecSiteManager.
func (in *CRSpecSiteManager) DeepCopy() *CRSpecSiteManager {
	if in == nil {
		return nil
	}
	out := new(CRSpecSiteManager)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CRStatus) DeepCopyInto(out *CRStatus) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CRStatus.
func (in *CRStatus) DeepCopy() *CRStatus {
	if in == nil {
		return nil
	}
	out := new(CRStatus)
	in.DeepCopyInto(out)
	return out
}
