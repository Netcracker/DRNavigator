node_defaults:
  keyfile: ~/.ssh/id_rsa
  username: runner

nodes:
- name: "node-all-in-one"
  address: "172.17.0.1"
  internal_address: "172.17.0.1"
  roles: ["control-plane", "worker"]

cluster_name: "test-local-k8s.com"

services:
  cri:
    containerRuntime: containerd
    containerdConfig:
      plugins."io.containerd.grpc.v1.cri".registry.configs."ghcr.io".auth:
        username: <REGISTRY_USER>
        password: <REGISTRY_PASSWORD>
  etc_hosts:
    172.17.0.1:
      - site-manager.test-local-k8s.com
      - service-a.test-local-k8s.com
      - service-b.test-local-k8s.com

plugins:
  site-manager:
    install: true
    installation:
      priority: 2
      procedures:
        - shell:
            # Create workspace directory and create namespace for site-manager
            command: |
              sudo mkdir -p /etc/site-manager
              sudo kubectl create namespace site-manager --dry-run=client -o yaml | sudo kubectl apply -f -
        - helm:
            # Install site-manager
            chart_path: ./charts/site-manager
            values:
              metricCollector:
                install: false
              ingress:
                name: site-manager.test-local-k8s.com
              controller:
                image: ghcr.io/netcracker/site-manager-cr-controller
                tag: <SM_TAG>
              image:
                repository: ghcr.io/netcracker/site-manager
                tag: <SM_TAG>
              env:
                SM_DEBUG: 'true'
              crd:
                install: true
              tls:
                ca: "<SM_CA>"
                crt: "<SM_SRT>"
                key: "<SM_KEY>"
            namespace: site-manager
            release: site-manager
        - expect:
            deployments:
              - name: site-manager
                namespace: site-manager
        # Restart is needed in case of cert regeneration
        - shell:
            command: kubectl rollout restart deployment site-manager -n site-manager
            sudo: true
        - expect:
            pods:
            - site-manager
  service-a:
    install: true
    installation:
      priority: 3
      procedures:
        - shell:
            # Create namespace for service
            command: kubectl create namespace test-services --dry-run=client -o yaml | sudo kubectl apply -f -
            sudo: true
        - helm:
            # Install service-a
            chart_path: ./tests/sm-dummy/charts/sm-dummy
            values:
              ingressName: service-a.test-local-k8s.com
              image: ghcr.io/netcracker/sm-dummy:<SM_TAG>
              serviceAccount:
                name: service-a
              name: service-a
            namespace: test-services
            release: service-a
        - expect:
            deployments:
              - name: service-a
                namespace: test-services
            pods:
              - service-a
  service-b:
    install: true
    installation:
      priority: 3
      procedures:
        - shell:
            # Create namespace for service
            command: kubectl create namespace test-services --dry-run=client -o yaml | sudo kubectl apply -f -
            sudo: true
        - helm:
            # Install service-b
            chart_path: ./tests/sm-dummy/charts/sm-dummy
            values:
              ingressName: service-b.test-local-k8s.com
              image: ghcr.io/netcracker/sm-dummy:<SM_TAG>
              serviceAccount:
                name: service-b
              name: service-b
              siteManager:
                after: ["service-a.test-services"]
            namespace: test-services
            release: service-b
        - expect:
            deployments:
              - name: service-b
                namespace: test-services
            pods:
              - service-b
